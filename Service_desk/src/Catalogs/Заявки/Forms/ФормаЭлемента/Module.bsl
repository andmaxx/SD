
Процедура ПоместитьВХранилищеСервер(ДвоичныеДанные)		
	элХранилища = Новый ХранилищеЗначения(ДвоичныеДанные);
	ОбъектСпр = РеквизитФОрмыВЗначение("Объект");
	ОбъектСпр.ТЗХранилище = элХранилища;
	ОбъектСпр.записать();
	Этаформа.Модифицированность = Истина;
	ЗначениеВРеквизитФормы(ОбъектСпр,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлКлиент(ИмяФайла)
	ДвоичныеДанные = ПолучитьДвоичныеДанныеНаСервере();
	ИмяФайла = КаталогВременныхФайлов() + Объект.ИмяФайла;
	ДвоичныеДанные.Записать(ИмяФайла);
КОнецПроцедуры

Функция ПолучитьДвоичныеДанныеНаСервере()
	ОбъектСпр = РеквизитФОрмыВЗначение("Объект");
	ДвоичныеДанные = ОбъектСпр.ТЗХранилище.получить();
	Возврат ДвоичныеДанные;
КонецФункции

Процедура СохранитьФайлСервер(ИмяФайла)
	ОбъектСпр = РеквизитФОрмыВЗначение("Объект");
	ДвоичныеДанные = 		ОбъектСпр.ТЗХранилище.получить() ;
	ИмяФайла = КаталогВременныхФайлов() + Объект.ИмяФайла;
	ДвоичныеДанные.Записать(ИмяФайла);
КОнецПроцедуры

&НаКлиенте
Процедура КартинкаНажатие(Элемент)
	АдресВХранилище = "";
	ВыбранноеИмяФайла = "";
	Если ПоместитьФайл(АдресВХранилище, , ВыбранноеИмяФайла, , УникальныйИдентификатор) Тогда		
		Файл = Новый Файл(ВыбранноеИмяФайла);
		Если Файл.Размер() > 125829120  Тогда
			Предупреждение("Размер файла не должен превышать 120 Мб");
			Возврат;  			
		КонецЕсли;
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);	
		ПоместитьВХранилищеСервер(ДвоичныеДанные);	
		Объект.ИмяФайла=  Файл.Имя;		
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	АдресВХранилище = "";
	ВыбранноеИмяФайла = "";
	
	СохранитьФайлКлиент(ВыбранноеИмяФайла); 
	//СохранитьФайлСервер(ВыбранноеИмяФайла); 
	
	Если ПоместитьФайл(АдресВХранилище,ВыбранноеИмяФайла , ВыбранноеИмяФайла, ложь, УникальныйИдентификатор) Тогда
		ПолучитьФайл(АдресВХранилище,ВыбранноеИмяФайла) ;
	КонецЕсли	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаЗаявки = ТекущаяДата();
		Объект.Статус = Перечисления.СтатусыЗаявок.ВОжиданииРаботы;
		Объект.Раздел = Справочники.Конфигурации.НайтиПоКоду("000000002");
		Объект.ВидУчета = Перечисления.ВидУчета.БУ;
		
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ОбщегоНазначенияСервер.ИмяПользователяСервер());
		ПользовательСпр = Справочники.Заявители.НайтиПоНаименованию(ПользовательИБ.Имя);
		Если  ПользовательСпр <> Справочники.Заявители.ПустаяСсылка() Тогда
			Объект.Заявитель = ПользовательСпр;
		Иначе
			Сообщить("В справочнике ""Заявители"" не найдено пользователя с именем """+ПользовательИБ.Имя+"""");
		КонецЕсли;
	КонецЕсли;
	
	ОграничениеДоступностиПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура РешеноПриИзменении(Элемент)
	//РешеноПриИзмененииНаСервере();
	
	//Если ИмяПользователя() <> Строка(Объект.Заявитель) Тогда
	//	Предупреждение("Заявка создана не Вами чтобы отмечать статус решения!");
	//КонецЕсли;
КонецПроцедуры

Процедура Отправить()
	
	
	
	ТемаЗаявки = "Service Desk заявка № - " + Объект.Код;
	ТекстЗаявки = "";
	
	Если Объект.Статус = Перечисления.СтатусыЗаявок.Закрыта Тогда
		ТекстЗаявки = "Заявка №" + Объект.Код + Символы.ПС + "Раздел " + Объект.Раздел + Символы.ПС + "Вид учета " + Объект.ВидУчета + Символы.ПС + "Описание: " + Символы.ПС + Объект.ОписаниеЗаявки + Символы.ПС + Символы.ПС + "Статус - " + Объект.Статус + Символы.ПС + "Срок выполнения " + Объект.Дэдлайн + Символы.ПС + Символы.ПС + "Заявка выполнена!";	
	ИначеЕсли Объект.Статус = Перечисления.СтатусыЗаявок.Отменена Тогда
		ТекстЗаявки = "Заявка №" + Объект.Код + Символы.ПС + "Раздел " + Объект.Раздел + Символы.ПС + "Вид учета " + Объект.ВидУчета + Символы.ПС + "Описание: " + Символы.ПС + Объект.ОписаниеЗаявки + Символы.ПС + Символы.ПС + "Статус - " + Объект.Статус + Символы.ПС + "Срок выполнения " + Объект.Дэдлайн + Символы.ПС + Символы.ПС + "Заявка отменена!";	
	Иначе
		ТекстЗаявки = "Заявка №" + Объект.Код + Символы.ПС + "Раздел " + Объект.Раздел + Символы.ПС + "Вид учета " + Объект.ВидУчета + Символы.ПС + "Описание: " + Символы.ПС + Объект.ОписаниеЗаявки + Символы.ПС + Символы.ПС + "Статус - " + Объект.Статус + Символы.ПС + "Срок выполнения " + Объект.Дэдлайн;	
	КонецЕсли;
	
	
	АдресСервера		= "srvmail.srv.fi";
	ПортSMTP			= 25;
	Пользователь		= "1c.servicedesk@srv.fi";
	Пароль				= "Qwerty123";
	УведомитьОДоставке	= Ложь;
	
	ИПП = Новый ИнтернетПочтовыйПрофиль;
	ИПП.POP3ПередSMTP = Ложь;
	ИПП.ИспользоватьSSLSMTP = Ложь;
	ИПП.АдресСервераSMTP=АдресСервера;
	ИПП.ПортSMTP=ПортSMTP;
	ИПП.АутентификацияSMTP=СпособSMTPАутентификации.БезАутентификации;
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	НС = Письмо.Получатели.Добавить();
	НС.Адрес = Объект.Исполнитель.EMail;
	НС.ОтображаемоеИмя = Объект.Исполнитель.Наименование;
	
	Если НЕ Объект.Исполнитель.EMail = Объект.Заявитель.EMail Тогда
		НС = Письмо.Копии.Добавить();
		НС.Адрес = Объект.Заявитель.EMail;
		НС.ОтображаемоеИмя = Объект.Заявитель.Наименование;
	КонецЕсли;

	Письмо.Отправитель.Адрес			 = "1c.servicedesk@srv.fi";
	Письмо.Отправитель.ОтображаемоеИмя	 = "1c.servicedesk@srv.fi";
	Письмо.Отправитель.Сервер			 = "srv.fi";
	
	Письмо.Тема = ТемаЗаявки;
	Письмо.Тексты.Добавить(ТекстЗаявки);
	Письмо.УведомитьОДоставке=УведомитьОДоставке;
	Почта1=Новый ИнтернетПочта;
	Почта1.Подключиться(ИПП);
	Почта1.Послать(Письмо,,ПротоколИнтернетПочты.SMTP);
	Почта1.Отключиться();
	
КонецПроцедуры

Процедура ОграничениеДоступностиПолей()
	Если ОбщегоНазначенияСервер.РольДоступнаСервер("Администратор") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Элементы.ОтправлятьОповещениеНаПочту.Видимость = Ложь;
	ЭтаФорма.Элементы.КомментарийИсполнителя.ТолькоПросмотр = Истина;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ОбщегоНазначенияСервер.ИмяПользователяСервер() <> Строка(Объект.Заявитель) Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
			ЭтаФорма.Элементы.Наименование.ТолькоПросмотр = истина;
			ЭтаФорма.Элементы.Статус.ТолькоПросмотр = истина;
			ЭтаФорма.Элементы.СтраницыПараметров.ТолькоПросмотр = истина;
			
			Сообщить("Заявка была создана не Вами, включен запрет редактирования");
		КонецЕсли
	КонецЕсли;
	
	Если ОбщегоНазначенияСервер.РольДоступнаСервер("ФинансовыйКонтролер") Тогда
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Сообщить("Доступны права финансового контролера, открыто поле DL утвержденная");
		КонецЕсли;
		ЭтаФорма.Элементы.ДэдлайнУтвержденный.ТолькоПросмотр = ложь;
	Иначе
		ЭтаФорма.Элементы.ДэдлайнУтвержденный.ТолькоПросмотр = истина;
	КонецЕсли;
	
КонецПроцедуры

Функция НадоЛиОтправлятьОповещение()
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
КонецПроцедуры

Функция МассивИзСтроки(Знач Строка,Разделитель)
	Массив=Новый Массив;
	МнСтр=СтрЗаменить(Строка,Разделитель,Символы.ПС);
	Для н=1 По СтрЧислоСтрок(МнСтр) Цикл
		Массив.Добавить(СтрПолучитьСтроку(МнСтр,н));	
	КонецЦикла;
	Возврат Массив;
КонецФункции


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ОтправлятьОповещениеНаПочту Тогда
		Отправить();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	ОтправлятьОповещениеНаПочту = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Ссылка.Пустая() Тогда
		ОтправлятьОповещениеНаПочту = Истина;	
	КонецЕсли;
	
	НаименованиеВвода = Объект.Наименование;

КонецПроцедуры


&НаКлиенте
Процедура ВажностьПриИзменении(Элемент)
	ОтправлятьОповещениеНаПочту = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ДэдлайнПриИзменении(Элемент)
	ОтправлятьОповещениеНаПочту = Истина;
КонецПроцедуры


&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	ЗаполнитьНаименованиеИСодержание();
	ОтправлятьОповещениеНаПочту = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ОписаниеЗаявкиПриИзменении(Элемент)
	ОтправлятьОповещениеНаПочту = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьНаименованиеИСодержание();
	
	НаименованиеВвода = СокрЛП(НаименованиеВвода);
		
	Если НЕ ЗначениеЗаполнено(Объект.ОписаниеЗаявки) Тогда
		Объект.ОписаниеЗаявки = НаименованиеВвода;
		Объект.ОписаниеЗаявки = СтрЗаменить(Объект.ОписаниеЗаявки, "¶", Символы.ПС);
	КонецЕсли;
	
	НаименованиеВвода = СтрЗаменить(НаименованиеВвода, Символы.ПС, " ");
	НаименованиеВвода = СтрЗаменить(НаименованиеВвода, "¶", " ");
	
	Объект.Наименование = НаименованиеВвода;
	
	Если Объект.Наименование <> НаименованиеВвода Тогда
		//обрезаем последний кусок слова
		Длинна = СтрДлина(Объект.Наименование);
		Для Ном = 1 По Длинна Цикл
			Символ = Сред(НаименованиеВвода, Длинна - Ном + 1, 1);
			Если Символ = " " Или Символ = "." Или Символ = "!" Или Символ = "," Тогда
				НаименованиеВвода = Сред(НаименованиеВвода, 1, Длинна - Ном + 1);
				Объект.Наименование = СокрЛП(НаименованиеВвода);
				Прервать;		
			КонецЕсли;
		КонецЦикла
	КонецЕсли;
	
	// Вставить содержимое обработчика.
КонецПроцедуры